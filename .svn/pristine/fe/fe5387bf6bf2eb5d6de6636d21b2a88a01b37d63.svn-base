<?php/** * 地址范围数据库 * 数据库表名 wm_RestaurantScope * scope_id      餐厅地址范围Id * scope_name    地址范围名称 * lng           经度 * lat           纬度 * sq_id         所属商圈id * sort_order    排序 * status        状态(1启用，0未启用) */namespace Administration\Controller;use Admin\Controller\AdminController;class DistributionRangeController extends AdminController{	//初始化    public function index(){		$User = M('store'); // 实例化User对象		$count      = $User->count();// 查询满足要求的总记录数		$Page       = new \Think\Page($count,15);// 实例化分页类 传入总记录数和每页显示的记录数(25)		$Page->setConfig('header','<span class="rows">共 %TOTAL_ROW% 条记录</span>');        $Page->setConfig('first','首页');        $Page->setConfig('prev','上一页');        $Page->setConfig('next','下一页');        $Page->setConfig('last','末页');        $Page->setConfig('theme','%HEADER% %FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% ');        $Page->lastSuffix = false;//分页最后的总页数不显示		$show       = $Page->show();// 分页显示输出		// 进行分页数据查询 注意limit方法的参数要使用Page类的属性		$list = $User->alias('s')->join('LEFT JOIN wm_shangquan AS c ON s.sq_id=c.sq_id')->field('s.*,c.sq_name')->order('s.store_id')->limit($Page->firstRow.','.$Page->listRows)->select();		$this->assign('list',$list);// 赋值数据集		$this->assign('page',$show);// 赋值分页输出		$this->meta_title = '配送范围管理';		$this->display(); // 输出模板		    }			//编辑配送范围	public function edit(){		$this->meta_title = '编辑配送范围';		if(IS_POST){			$rules1 = array(			array('distribution_range','require','地址范围名称不能为空！'),			);			$verify = M("store");  //动态验证			if ($verify->validate($rules1)->create()){				$Menu = D('store');            	$data = $Menu->create();            	if($data){               		if($Menu->save()!== false){           			                    	$this->success('更新成功',U('index'));                	}            	}else{ 		                	$this->error($Menu->getError());            	}        	}else{            	$this->error($verify->getError());				        	}				}else{			$id = I('get.store_id');            $data['store_id'] = $id;            $ret = M('store')->where($data)->find();            if(false === $ret){                $this->error('获取后台数据错误');            }            $this->assign('data', $ret);            $this->display();			}            	}    //清除坐标范围    public function del(){        $id = array_unique((array)I('store_id',0));        $map = array('store_id' => array('in', $id) );        $data['distribution_range'] = "";        if(M('store')->where($map)->save($data)){            $this->success('清除成功');        }else{            $this->error('清除失败！');        }    }}