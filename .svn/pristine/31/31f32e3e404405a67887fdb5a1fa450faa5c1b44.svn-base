<?php/** * 餐品分类数据库 * 数据库表名 wm_canpin * canpin_id      餐品分类ID * canpin_name    餐品分类名称 * store_id       店铺id * sort_order      排序 * flag            标记(1启用，0未启用) */namespace Business\Controller;use Admin\Controller\AdminController;class CanPinController extends AdminController{	//初始化    public function index(){    	$store_id = session('store_id'); //从session取店铺id    	$store_name = session('store_name'); //从session取店铺名称    	if($store_id != null){	    	$store_name = $this->unescape(session('store_name')); //从cookie取店铺名称			$User = M('canpin'); // 实例化User对象			$count = $User->where("store_id=".$store_id)->count();// 查询满足要求的总记录数			$Page = new \Think\Page($count,15);// 实例化分页类 传入总记录数和每页显示的记录数(25)			$Page->setConfig('header','<span class="rows">共 %TOTAL_ROW% 条记录</span>');	        $Page->setConfig('first','首页');	        $Page->setConfig('prev','上一页');	        $Page->setConfig('next','下一页');	        $Page->setConfig('last','末页');	        $Page->setConfig('theme','%HEADER% %FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% ');	        $Page->lastSuffix = false;//分页最后的总页数不显示			$show = $Page->show();// 分页显示输出			$list1 = $User->where("store_id=".$store_id)->limit($Page->firstRow.','.$Page->listRows)->order('canpin_id')->select();			$id = 1;			$list = array();			foreach($list1 as $k=>$val){				$val["id"]=$id;				$val["store_name"]=$store_name;				array_push($list,$val);				$id++;		}			$this->assign('list_cp', $list);			$this->assign('page',$show);// 赋值分页输出            $this->assign('store_id',$store_id);			$this->meta_title = '餐品分类管理'; 		    	}else{    		$data = "您还没有选择店铺，请先点击右上角选择店铺。";			$this->assign('pd_dp', $data);    	}        $m = M('Store');        $uid = session('user_auth.uid');        if(is_administrator($uid)){            $list_store = $m->select();        }else{            $list_ra = $m->where('uid = '.$uid)->getField('store_id',true);            if(!empty($list_ra)){                $store_where['store_id'] = array('in',$list_ra);                $list_store = $m->where($store_where)->select();            }        }        $this->assign('list_store',$list_store);		$this->display(); // 输出模板    }		//标记	public function toogleHide($id,$value = 1){        $this->editRow('canpin', array('flag'=>$value), array('canpin_id'=>$id));    }	//增加餐品分类	public function add(){		C('TOKEN_ON',false);        $sid = I('store_id');        $name = I('store_name');        $add_type = I('add_type');			if(IS_POST){				$rules = array(				    array('canpin_name','require','餐品分类名称不能为空！'),				);				$User = M("canpin");  //动态验证				if ($User->validate($rules)->create()){					$shop = D('canpin');	            	$data = $shop->create();					if($data){	               		$id = $shop->add();	                    if($id){                            session('store_id',$sid);                            session('store_name',$name);                            if($add_type == 0){                                action_log('add_action','canpin',$id,is_login());                                $this->success('新增成功', U("index"));                            }else if($add_type == 1){                                $this->success('新增成功');                            }					   	}					   	else{							$this->error('新增失败');					    }					}else{					 	$this->error($shop->getError());					}				}else{					$this->error($User->getError());				}			}else{				$store_id = session('store_id');				$store_name = session('store_name');				$array_data = array();				$array_data["store_id"] = $store_id;				$array_data["store_name"] = $store_name;				$this->assign('list',$array_data);				$this->meta_title = '增加餐品分类';                $this->display();			}	}		//删除餐品分类	public function del(){		$id = array_unique((array)I('canpin_id',0));        $map = array('canpin_id' => array('in', $id) );        if(M('canpin')->where($map)->delete()){            action_log('delete_action','canpin',is_array($id)?implode(',', $id):$id,is_login());            $this->success('删除成功');        }else{            $this->error('删除失败！');        }	}		//编辑餐品分类	public function edit(){		$this->meta_title = '编辑餐品分类'; 		if(IS_POST){			$rules1 = array(			array('canpin_name','require','餐品分类名称不能为空！'),			);            $add_type = I('post.add_type');            $canpin_id = I('post.canpin_id');            $Menu = M("canpin");  //动态验证			if ($Menu->validate($rules1)->create()){               		if($Menu->where('canpin_id = '.$canpin_id)->save() !== false){                        action_log('edit_action','canpin',$canpin_id,is_login());                        if($add_type == 0){                            $this->success('更新成功',U('index'));                        }else if($add_type == 1){                            $this->success('更新成功');                        }                	}        	}else{            	$this->error($Menu->getError());				        	}				}else{			$id = I('get.canpin_id');            $canpin_type = I('canpin_type');            $city = M('canpin')->field(true)->find($id);/* 获取数据 */             if(false === $city){                $this->error('获取后台城市信息错误');            }						$store_id = session('store_id');			$store_name = session('store_name');			$array_data = array();			$array_data["store_id"] = $store_id;			$array_data["store_name"] = $store_name;            if($canpin_type == 1){                $this->ajaxReturn($city);            }			$this->assign('list',$array_data);            $this->assign('_city', $city);            $this->display();        }	}		public function getData(){			$sq_id = $_REQUEST['sq_id'];			$sq_arr = M('store')->where("sq_id=".$sq_id)->select();			$this->ajaxReturn($sq_arr);	}		function unescape($str) {    $str = rawurldecode($str);    preg_match_all("/(?:%u.{4})|&#x.{4};|&#\d+;|.+/U",$str,$r);    $ar = $r[0];    //print_r($ar);    foreach($ar as $k=>$v) {        if(substr($v,0,2) == "%u"){            $ar[$k] = iconv("UCS-2BE","UTF-8",pack("H4",substr($v,-4)));  	}        elseif(substr($v,0,3) == "&#x"){            $ar[$k] = iconv("UCS-2BE","UTF-8",pack("H4",substr($v,3,-1)));  	}        elseif(substr($v,0,2) == "&#") {                         $ar[$k] = iconv("UCS-2BE","UTF-8",pack("n",substr($v,2,-1)));        }    }    return join("",$ar);	}}