<?phpnamespace Dispatch\Controller;use Admin\Controller\AdminController;class OrderAuditController extends AdminController{	//未审核    public function index(){		$User = M('order'); // 实例化User对象        $tody = strtotime(date('Y-m-d',time()));        $tomorrow=$tody+86399;        $dc['a.check_status'] = 0;        $dc['a.status'] = array('in','2,3');        $dc['a.send_time'] = array(array('egt',$tody),array('elt',$tomorrow)) ;		$count      = $User->alias('a')->where($dc)->select();// 查询满足要求的总记录数		$Page       = new \Think\Page(count($count),15);// 实例化分页类 传入总记录数和每页显示的记录数(25)		$Page->setConfig('header','<span class="rows">共 %TOTAL_ROW% 条记录</span>');        $Page->setConfig('first','首页');        $Page->setConfig('prev','上一页');        $Page->setConfig('next','下一页');        $Page->setConfig('last','末页');        $Page->setConfig('theme','%HEADER% %FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% ');        $Page->lastSuffix = false;//分页最后的总页数不显示		$show       = $Page->show();// 分页显示输出		// 进行分页数据查询 注意limit方法的参数要使用Page类的属性		$list = $User->alias('a')            ->join('LEFT JOIN wm_store AS b ON a.store_id=b.store_id')            ->join('LEFT JOIN wm_shangquan AS c ON b.sq_id=c.sq_id')            ->join('LEFT JOIN wm_user_address AS d ON a.address_id=d.address_id')            ->join('LEFT JOIN wm_ucenter_member AS e ON a.uid=e.id')            ->field('a.*,b.store_name,b.push_msg_id,b.lng as shop_lng,b.lat as shop_lat,b.distribution_range,c.sq_name,d.lng,d.lat,e.username')->order('a.order_id desc')->limit($Page->firstRow.','.$Page->listRows)->where($dc)->select();        $list1 = array();        foreach($list as $s1){            if($s1['lng'] != null){                $s1['distance_number'] = distanceBetween($s1['shop_lng'],$s1['shop_lat'],$s1['lng'],$s1['lat']);                //计算是否在配送范围                $arr_user = array();                $arr_user['x'] = $s1['lng'];                $arr_user['y'] = $s1['lat'];                $res= explode(",",$s1['distribution_range']);                $arr_text1 = array();                $arr_text = array();                for($i=0;$i<count($res);$i+=2){                    $arr_text1['x'] = $res[$i];                    $arr_text1['y'] = $res[$i+1];                    $arr_text[] = $arr_text1;                }                $s1['is_peisong'] = $this->PointInPoly($arr_user,$arr_text);            }else{                $s1['distance_number'] = '未知';            }            $list1[] = $s1;        }		$this->assign('list',$list1);// 赋值数据集		$this->assign('page',$show);// 赋值分页输出		$this->meta_title = '未审核订单';		$this->display(); // 输出模板    }    //查看订单详情    public function orderMore(){        $canming = I('order_id');        if($canming){            $order = M('order');            $cx_order = $order                ->join("JOIN wm_user_address ON wm_user_address.address_id = wm_order.address_id")                ->join("JOIN wm_store ON wm_order.store_id = wm_store.store_id")                ->where("wm_order.order_id = $canming")                ->field("wm_order.*,wm_store.*,wm_user_address.phone ph,wm_user_address.username,wm_user_address.detail_address,wm_user_address.gender")                ->select();            //查询订单详情            $detail = M('canming');            $cx_detail = $detail->join("JOIN wm_order_detail ON wm_order_detail.cm_id = wm_canming.cm_id") -> select();            //重组订单与订单详情            foreach ($cx_order as $key => $v) {                foreach ($cx_detail as $k => $cv) {                    if ($v['order_id'] == $cv['order_id']) {                        $cx_order[$key]['child'][] = $cv;                    }                }                $cx_order[$key]['count'] = count($cx_order[$key]['child'], 0);            }            $this->ajaxReturn($cx_order);        }else{            $this->ajaxReturn(false);        }    }    //批量审核    public function batch_audit(){        $id = array_unique((array)I('order_id',0));        $pushid = array_unique((array)I('pushid',0));        $map = array('order_id' => array('in', $id) );        $data['check_status'] = 1;        if(M('order')->where($map)->save($data)){            push_msg_client($pushid);            $this->success('审核成功');        }else{            $this->error('审核失败！');        }    }    //拒单处理    public function cancelOrder(){        $order_id = I('post.order_id');        $content = I('post.content');        $paied = I('post.paied');        $type = I('post.type');        $m = M('order');        empty($content) && $this->error('请输入拒单原因');        if($type == 1){            $status = 10;        }else if($type == 2){            $status = 10;        }else if($type == 3){            $delivery_detail = M('delivery_detail');            $d['order_id'] = $order_id;            $d['is_canju']=0;            $delivery_detail_data = $delivery_detail->where($d)->find();            if(!empty($delivery_detail_data)){                $dd['detail_id'] = $delivery_detail_data['detail_id'];                $dd['status'] = 5;                $delivery_detail->save($dd);            }            $status = 9;        }else if($type == 4){            $delivery_detail = M('delivery_detail');            $d['order_id'] = $order_id;            $d['is_canju']=0;            $delivery_detail_data = $delivery_detail->where($d)->find();            if(!empty($delivery_detail_data)){                $dd['detail_id'] = $delivery_detail_data['detail_id'];                $dd['status'] = 5;                $delivery_detail->save($dd);            }            $status = 10;        }        $data = array('reject_time'=>time(),'reject_reason'=>$content,'status'=>$status);        $list = $m->where('order_id = '.$order_id)->setField($data);        $this->ajaxReturn($list);    }    //历史订单    public function history(){        $tj = I('get.tj'); //提交类型        if($tj == 888){ //等于888是查询提交            $dc = array();            $dd = array();            $cxlx = I('get.cxlx'); //查询类型            $cxtj = I('get.cxtj'); //查询条件            $ddzt = I('get.ddzt'); //订单状态            $sjlx = I('get.sjlx'); //时间类型            $qssj = I('get.qssj'); //起始时间            $jssj = I('get.jssj'); //结束时间            //查询条件选择            if($cxtj != 0){ //店铺查询                $dc['store_id'] = $cxtj;                $dd['a.store_id'] = $cxtj;            }            //时间筛选            $qssj_time = strtotime($qssj);            $jssj_time = strtotime($jssj);            if($qssj_time > 0 && $jssj_time > 0){                if($jssj_time == $qssj_time){ //判断俩个时间是否相等                    $time = strtotime(date('Y-m-d',strtotime('+1 day'))); //当天晚上0点时间                    $time1 = strtotime(date('Y-m-d')); //当天早上0点                    if($sjlx == 1){                        $dc['send_time'] = array(array('gt',$time1),array('lt',$time));                        $dd['a.send_time'] = array(array('gt',$time1),array('lt',$time)) ;                    }elseif($sjlx == 2){                        $dc['xd_time'] = array(array('gt',$time1),array('lt',$time));                        $dd['a.xd_time'] = array(array('gt',$time1),array('lt',$time)) ;                    }                }            }            if($jssj_time > $qssj_time){ //结束大于起始                $time = $jssj_time; //结束时间                $time1 = $qssj_time; //起始时间                if($sjlx == 1){                    $dc['send_time'] = array(array('gt',$time1),array('lt',$time));                    $dd['a.send_time'] = array(array('gt',$time1),array('lt',$time));                }elseif($sjlx == 2){                    $dc['xd_time'] = array(array('gt',$time1),array('lt',$time));                    $dd['a.xd_time'] = array(array('gt',$time1),array('lt',$time));                }            }            if($qssj_time>0 && $jssj_time==0){ //起始大于0                $time1 = $qssj_time; //起始时间                if($sjlx == 1){                    $dc['send_time'] = array('gt',$time1);                    $dd['a.send_time'] = array('gt',$time1);                }elseif($sjlx == 2){                    $dc['xd_time'] = array('gt',$time1);                    $dd['a.xd_time'] = array('gt',$time1);                }            }            $User = M('order'); // 实例化User对象            if($ddzt > 0){                $dc['status'] = $ddzt;                $dd['a.status'] = $ddzt;            }else{                $dc['status'] = array('in','1,2,3,4,7,9,10,13');                $dd['a.status'] = array('in','1,2,3,4,7,9,10,13');            }            $count = $User->alias('a')->where($dc)->count('a.store_id');            $Page       = new \Think\Page($count,15);// 实例化分页类 传入总记录数和每页显示的记录数(25)            $Page->setConfig('header','<span class="rows">共 %TOTAL_ROW% 条记录</span>');            $Page->setConfig('first','首页');            $Page->setConfig('prev','上一页');            $Page->setConfig('next','下一页');            $Page->setConfig('last','末页');            $Page->setConfig('theme','%HEADER% %FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% ');            $Page->lastSuffix = false;//分页最后的总页数不显示            $show       = $Page->show();// 分页显示输出            // 进行分页数据查询 注意limit方法的参数要使用Page类的属性            //主查询            $list = $User->alias('a')                ->join('LEFT JOIN wm_store AS b ON a.store_id=b.store_id')                ->join('LEFT JOIN wm_shangquan AS c ON b.sq_id=c.sq_id')                ->join('LEFT JOIN wm_user_address AS d ON a.address_id=d.address_id')                ->join('LEFT JOIN wm_ucenter_member AS e ON a.uid=e.id')                ->field('a.*,b.store_name,b.push_msg_id,b.lng as shop_lng,b.lat as shop_lat,b.distribution_range,c.sq_name,d.lng,d.lat,e.username')->order('a.order_id desc')->limit($Page->firstRow.','.$Page->listRows)->where($dd)->select();            $list1 = array();            foreach($list as $s1){                if($s1['lng'] != null){                    $s1['distance_number'] = distanceBetween($s1['shop_lng'],$s1['shop_lat'],$s1['lng'],$s1['lat']);                    //计算是否在配送范围                    $arr_user = array();                    $arr_user['x'] = $s1['lng'];                    $arr_user['y'] = $s1['lat'];                    $res= explode(",",$s1['distribution_range']);                    $arr_text1 = array();                    $arr_text = array();                    for($i=0;$i<count($res);$i+=2){                        $arr_text1['x'] = $res[$i];                        $arr_text1['y'] = $res[$i+1];                        $arr_text[] = $arr_text1;                    }                    $s1['is_peisong'] = $this->PointInPoly($arr_user,$arr_text);                }else{                    $s1['distance_number'] = '未知';                }                $list1[] = $s1;            }            $Store = M('store');            $store_name_list = $Store->select();            $this->assign('store_name_list',$store_name_list);// 输出所有店铺            $this->assign('cxlx',$cxlx);// 查询类型            $this->assign('ddzt',$ddzt);// 订单状态            $this->assign('sjlx',$sjlx);// 时间类型            $this->assign('cxtj',$cxtj);// 查询条件            $this->assign('qssj',$qssj);// 起始时间            $this->assign('jssj',$jssj);// 结束时间            $this->assign('list',$list1);// 赋值数据集            $this->assign('page',$show);// 赋值分页输出            $this->meta_title = '订单查询结果';        }else{            $User = M('order'); // 实例化User对象            $time = strtotime(date('Y-m-d',strtotime('+1 day'))); //当天晚上0点时间            $time1 = strtotime(date('Y-m-d')); //当天早上0点            $dc = array();            $dc['check_status'] = 0;            $dc['status'] = array('in','1,2,3,4,7,9,10,13');            $dc['send_time'] = array(array('gt',$time1),array('lt',$time));            $count      = $User->where($dc)->select();// 查询满足要求的总记录数            $Page       = new \Think\Page(count($count),15);// 实例化分页类 传入总记录数和每页显示的记录数(25)            $Page->setConfig('header','<span class="rows">共 %TOTAL_ROW% 条记录</span>');            $Page->setConfig('first','首页');            $Page->setConfig('prev','上一页');            $Page->setConfig('next','下一页');            $Page->setConfig('last','末页');            $Page->setConfig('theme','%HEADER% %FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% ');            $Page->lastSuffix = false;//分页最后的总页数不显示            $show       = $Page->show();// 分页显示输出            // 进行分页数据查询 注意limit方法的参数要使用Page类的属性            $dd = array();            $dd['a.check_status'] = 0;            $dd['a.status'] = array('in','1,2,3,4');            $dd['a.send_time'] = array(array('gt',$time1),array('lt',$time)) ;            $list = $User->alias('a')                ->join('LEFT JOIN wm_store AS b ON a.store_id=b.store_id')                ->join('LEFT JOIN wm_shangquan AS c ON b.sq_id=c.sq_id')                ->join('LEFT JOIN wm_user_address AS d ON a.address_id=d.address_id')                ->join('LEFT JOIN wm_ucenter_member AS e ON a.uid=e.id')                ->field('a.*,b.store_name,b.push_msg_id,b.lng as shop_lng,b.lat as shop_lat,b.distribution_range,c.sq_name,d.lng,d.lat,e.username')->order('a.order_id desc')->limit($Page->firstRow.','.$Page->listRows)->where($dd)->select();            $list1 = array();            foreach($list as $s1){                if($s1['lng'] != null){                    $s1['distance_number'] = distanceBetween($s1['shop_lng'],$s1['shop_lat'],$s1['lng'],$s1['lat']);                    //计算是否在配送范围                    $arr_user = array();                    $arr_user['x'] = $s1['lng'];                    $arr_user['y'] = $s1['lat'];                    $res= explode(",",$s1['distribution_range']);                    $arr_text1 = array();                    $arr_text = array();                    for($i=0;$i<count($res);$i+=2){                        $arr_text1['x'] = $res[$i];                        $arr_text1['y'] = $res[$i+1];                        $arr_text[] = $arr_text1;                    }                    $s1['is_peisong'] = $this->PointInPoly($arr_user,$arr_text);                }else{                    $s1['distance_number'] = '未知';                }                $list1[] = $s1;            }            $Store = M('store');            $store_name_list = $Store->select();            $this->assign('store_name_list',$store_name_list);// 输出所有店铺            $this->assign('list',$list1);// 赋值数据集            $this->assign('page',$show);// 赋值分页输出            $this->meta_title = '订单查询取消';        }        $this->display(); // 输出模板    }    public function del(){        //删除单条商圈信息        $order_id = I('get.order_id');        //删除订单        $Order= M('order');        $where['order_id'] = $order_id;        $arr = $Order->where($where)->delete();        //删除订单详情        $order_detail= M('order_detail');        $od_ret = $order_detail->where($where)->find();        if($od_ret != null){            $order_detail->where($where)->delete();        }        if($arr>0){            $this->success('删除成功');        }else{            $this->error('删除失败');        }    }    //计算一个坐标是否在坐标集public function PointInPoly($pt, $poly){    for ($c = false, $i = -1, $l = count($poly), $j = $l - 1; ++$i < $l; $j = $i){        if((($poly[$i]['y'] <= $pt['y'] && $pt['y'] < $poly[$j]['y']) || ($poly[$j]['y'] <= $pt['y'] && $pt['y'] < $poly[$i]['y']))&& ($pt['x'] < ($poly[$j]['x'] - $poly[$i]['x']) * ($pt['y'] - $poly[$i]['y']) / ($poly[$j]['y'] - $poly[$i]['y']) + $poly[$i]['x'])){        $c = !$c;        }    }    return $c;}    public function refund(){        if(IS_GET){            $storeid=I('storeid',0,'intval');            empty($storeid)?$condiction='1=1':$condiction="store_id={$storeid}";            $key=I('keywords',0);            empty($key)?$curr=strtotime(date('Y-m-d',time())):$curr=strtotime($key);            $tomorrow=$curr+86400;            $where = "status in(8,10,11,13,15,16,17,18) AND $condiction AND xd_time>=$curr AND xd_time<=$tomorrow";        }else{            $today=strtotime(date('Y-m-d',time()));            $tomorrow=$today+86400;            $where = "status in(8,10,11,13,15,16,17,18) AND xd_time>=$today AND xd_time<=$tomorrow";        }        $store=M('Store')->field('store_id,store_name')->select();        //$list=$ord->where($where)->select();        $p=I('p',0,'intval');        $res=my_page('Order',$p,$where,1);        //dump($res);        $this->assign('list',$res['list']);        $this->assign('page',$res['page']);        $this->assign('store',$store);        $this->display();    }}