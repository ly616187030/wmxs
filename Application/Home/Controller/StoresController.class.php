<?phpnamespace Home\Controller;use User\Api\UserApi;class StoresController extends HomeController{    public function index(){        $canpin = M('Canpin');        $canming = M('Canming');        $store = M('Store');        $id = I('store_id');        $cm = I('cm');        if(!empty($cm)){            $map['cm_name']=array('like',"%$cm%");;        }        $prefix=C('DB_PREFIX');        //餐厅信息        $canju=M('Tableware')->find();        $map['store_id']=$id;        $map['flag']=1;        $storelist=$store->where($map)->field('store_name,store_id,qisong_price,peisong_price,sh_time,store_logo_id,address_detail')->find();        //餐品分类信息        $cp_category=$canpin->where($map)->select();        $cm_list=$canming->where($map)->select();        foreach($cp_category as & $val){            foreach($cm_list as $v){                if($v['canping_id']==$val['canpin_id']){                    $val['child'][]=$v;                }            }        }        //dump($canju);        $this->assign('peisong_time',C('OPENTIME'));        $this->assign('storelist',$storelist);        $this->assign('cp_cate',$cp_category);        $this->assign('canju',$canju);        $this->assign('id',$id);        $this->assign('is_login',is_login());        $this->display();    }    public function storeFav(){        //收藏店铺        $uid = I('post._uid');        $store_id = I('post._storeid');        $m = M('Favorites_store');        $data['uid'] = $uid;        $data['store_id'] =$store_id;        $data['status'] = 1;        $where['uid'] = $uid;        $where['store_id'] = $store_id;        $status = $m->where($where)->count();        if($status > 0){            $list = $m->where($where)->delete();        }else{            $list = $m->add($data);        }        $this->ajaxReturn($list);    }    public function foodFav(){        //收藏菜品        $cm_id = I('food_fav_uid');        $m = M('Favorites_cm');        $data['uid'] = UID;        $data['cm_id'] = $cm_id;        $data['status'] = 1;        $where['cm_id'] = $cm_id;        $where['uid'] = UID;        $status = $m->where($where)->select();        if($status == null){            $list = $m->add($data);        }else{            $list = $m->where($where)->delete();        }        $this->ajaxReturn($list);    }    function pingFen($id){        $m = M('Pingjia');        $list_store_avg = $m->where('store_id ='.$id)->avg('pingfen');//店铺平均分        //$list_store_sum = $m->where('store_id ='.$store_id)->sum('pingfen');//店铺总分        $count = $m->where('store_id ='.$id)->count();//评分总数        $five  = $m->where('pingfen = 5 AND store_id ='.$id)->count();//五星评分的总数        $four  = $m->where('pingfen = 4 AND store_id ='.$id)->count();//四星评分的总数        $three = $m->where('pingfen = 3 AND store_id ='.$id)->count();//三星评分的总数        $two   = $m->where('pingfen = 2 AND store_id ='.$id)->count();//二星评分的总数        $one   = $m->where('pingfen = 1 AND store_id ='.$id)->count();//一星评分的总数        $five_star=round(($five/$count)*100);//计算五星评分的百分比        $four_star=round(($four/$count)*100);//计算四星评分的百分比        $three_star=round(($three/$count)*100);//计算三星评分的百分比        $two_star=round(($two/$count)*100);//计算二星评分的百分比        $one_star=round(($one/$count)*100);//计算一星评分的百分比        $avg = round(($list_store_avg/5)*100);//计算店铺评分占的百分比        $this->assign('five',$five_star);        $this->assign('four',$four_star);        $this->assign('three',$three_star);        $this->assign('two',$two_star);        $this->assign('one',$one_star);        $this->assign('avg',$avg);        $this->assign('count',$count);        $this->assign('list_store_avg',number_format($list_store_avg,1));    }    public function getOrder(){        //点击重新排序        $canpin = M('Canpin');        $canming = M('Canming');        $fav_cm = M('Favorites_cm');        $goods_count = M('Goods_count');        $id = I('post._storeid');        $where = 'store_id = '.$id;        $sort = I('post._sort');        $year = date('Y');        $month = date('n');        switch($sort){            case 'price':                $order = "now_price desc";break;            case 'sales':                $order = "sale_num desc";break;            default:                $order = "ctime desc";        }        $list_fav_cm = $fav_cm->select();        $list_goods_count = $goods_count->where("year = $year and month = $month")->select();//查询当月的销量        $list_canpin = $canpin->where($where)->order("sort_order asc,canpin_id desc")->select();        $list_canming = $canming->alias('a')            ->join('LEFT JOIN wm_picture AS c ON a.big_img = c.id')            ->where('a.flag = 1')->field('a.*,c.path')->order($order)->select();        foreach($list_canpin as $key=>$v){            //把当前分类的菜品以数组写入到分类中命名为child            foreach($list_canming as $k=>$cv){                if($v['canpin_id'] == $cv['canping_id']){                    $list_canpin[$key]['child'][] = $cv;                }            }            $list_canpin[$key]['count'] = count($list_canpin[$key]['child'],0);//统计每个分类有多少个菜品            //判断当前菜品是否为已收藏，1为已收藏            foreach($list_canpin[$key]['child'] as $a=>$c){                foreach($list_fav_cm as $b){                    if($b['uid'] == UID){                        if($c["cm_id"] == $b["cm_id"]){                            $list_canpin[$key]['child'][$a]['fav']=1;                        }                    }                }            }            //把当前菜品的销量的值写入到$list_canpin数组中的child子数组下的sale_num字段            foreach($list_canpin[$key]['child'] as $e=>$f){                foreach($list_goods_count as $d){                    if($f['cm_id']==$d['cm_id']){                        $list_canpin[$key]['child'][$e]['sale_num'] = $d['quantity'];                    }                }            }        }        $this->ajaxReturn($list_canpin);    }    public function rating(){        //店铺评价        $store_id = I('get.store_id');        $m = M('Pingjia');        $store = M('Store');        $n = M('Order');        $z = M('Praise');        $count = $m->where('store_id = '.$store_id)->count();        $Page = new \Think\Page($count,6);// 实例化分页类 传入总记录数和每页显示的记录数(10)        $Page->setConfig('prev','&nbsp;');        $Page->setConfig('next','&nbsp;');        $Page->setConfig('theme','  %UP_PAGE% %NOW_PAGE% / %TOTAL_PAGE% %DOWN_PAGE% ');        $Page->lastSuffix = false;//分页最后的总页数不显示        $show = $Page->show();// 分页显示输出        //查询并显示当前评价的会员名称和评价信息        $list = $m->alias('a')            ->join('LEFT JOIN wm_member AS b ON a.uid = b.uid')            ->field('a.*,b.nickname')->where('store_id ='.$store_id)            ->limit($Page->firstRow.','.$Page->listRows)            ->select();        foreach($list as $k=>$v){            $sum = $n->where('status = 6 AND uid = '.$v['uid'])->sum('total');            if(empty($sum)){                $list[$k]['count'] = 0;            }else{                $list[$k]['count'] = $sum;            }        }        //显示当前店铺信息        $list_store = $store->alias('a')->join('LEFT JOIN wm_pingjia AS p ON a.store_id = p.store_id')->field('a.*,p.pingfen')->where('a.store_id ='.$store_id)->find();        $sum_zan = $z->where('store_id = '.$store_id)->sum('praise');        if(empty($sum_zan)){            $list_store['count'] = 0;        }else{            $list_store['count'] = $sum_zan;        }        //营业时间        if(strpos($list_store['s_time'],",")){            $t_stime=explode(",",$list_store['s_time']);            $t_etime=explode(",",$list_store['e_time']);            $list_store['open_time']="$t_stime[0]-$t_etime[0] / $t_stime[1]-$t_etime[1]";        }else{            $list_store['open_time']="{$list_store['s_time']}-{$list_store['e_time']}";        }        $list_store['is_open']=is_open($list_store['s_time'],$list_store['e_time']);        $this->pingFen($store_id);        $this->assign('list_store',$list_store);        $this->assign('list',$list);        $this->assign('page',$show);        $this->assign("is_login",is_login());        $this->display();    }    public function logout(){        //会员退出登录        if(is_login()){            D('Member')->logout();            redirect($_SERVER['HTTP_REFERER']);        } else {            $this->redirect('User/login');        }    }    /**     * 获取当前商家优化活动     * @return string json     */    public static function get_youhui($storeid){        $uid =is_login();        $id=empty($storeid)?session('currstoreid'):$storeid;        //$where['store_id']=$id;        $where['uid']=$uid;        $where['status']=array('in','2,3,4,5,6');        $is_first=M("Order")->where($where)->find();        if(empty($is_first)){            $first_ord=1;            $map['promotion_type']=5;        }else{            $first_ord=2;            $map['promotion_type']=array('neq','5');        }        $huodong=M("cuxiao");        $map['store_id']=$id;        $map['state']=0;        $res=$huodong->where($map)->order('first_order desc')->select();        $colors=array("cc22e2","52af27","ff4e00","dc0411","9071cb","0EDD81","802E1A","7F8011","B987FF");        foreach($res as  $k=> & $v){            $v['color']=$colors[$k];            $v['first_ord']=$first_ord;        }        return $res;    }}